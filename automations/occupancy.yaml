# ------------------------------
# Room occupancy rules
#
- alias: Set rooms to unoccupied when away
  hide_entity: True
  trigger:
    platform: state
    entity_id: group.all_devices
    from: 'home'
    to: 'not_home'
  action:
    service: python_script.set_away

- alias: Bedroom occupied
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.bedroom
    to: 'occupied'
    from: 'not_occupied'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.myhome_mode") %}
            {% set sensor = states("sensor.motion_sensor_2_2") | float %}
            {% if mode == "Morning" %}
                {{ sensor <= 3 }}
            {% elif mode == "Day" %}
                {{ sensor <= 0 }}
            {% elif mode == "Afternoon" %}
                {{ sensor <= 5 }}
            {% elif mode in ("Evening", "Night") %}
                {{ sensor <= 9 }}
            {% else %}
                {{ sensor <= 5 }}
            {% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: state
        entity_id: input_boolean.room_bedroom
        state: 'on'
  action:
    service: python_script.enable_room_scene
    data:
      room: bedroom
- alias: Bedroom countdown
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.bedroom
    to: 'countdown'
    for:
      minutes: 10
  action:
    - service: python_script.set_room_state
      data:
        entity_id: room.bedroom
        state: not_occupied
- alias: Bedroom not occupied
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.bedroom
    to: 'not_occupied'
    for:
      seconds: 5
  action:
    service: python_script.enable_room_scene
    data:
      room: bedroom

- alias: Living room occupied
  hide_entity: True
  trigger:
    - platform: state
      entity_id: room.living_room
      to: 'occupied'
      from: 'not_occupied'
    - platform: state
      entity_id: input_select.media_mode
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.myhome_mode") %}
            {% set lr_sensor = states("sensor.motion_sensor_10_2") | float %}
            {% set bc_sensor = states("sensor.motion_sensor_4_2") | float %}
            {% if mode == "Morning" %}
                {{ lr_sensor <= 14 or bc_sensor <= 7 }}
            {% elif mode in ("Day", "Afternoon") %}
                {{ lr_sensor <= 20 or bc_sensor <= 3 }}
            {% elif mode in ("Evening", "Night") %}
                {{ lr_sensor <= 30 or bc_sensor <= 20 }}
            {% else %}
                {{ lr_sensor <= 14 or bc_sensor <= 7 }}
            {% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: state
        entity_id: input_boolean.room_living_room
        state: 'on'
  action:
    service: python_script.enable_room_scene
    data_template:
      room: living_room
      modifier: >
          {% if states('input_select.media_mode') in ('Movie', 'TV') %}
          {{ states('input_select.media_mode') }}
          {% endif %}
- alias: Living room countdown
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.living_room
    to: 'countdown'
    for:
      minutes: 20
  action:
    - service: python_script.set_room_state
      data:
        entity_id: room.living_room
        state: not_occupied
- alias: Living room not occupied
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.living_room
    to: 'not_occupied'
    for:
      seconds: 5
  action:
    service: python_script.enable_room_scene
    data:
      room: living_room

- alias: Hall occupied
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.hall
    to: 'occupied'
    from: 'not_occupied'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("sensor.motion_sensor_5_2") | float <= 20 }}'
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: state
        entity_id: input_boolean.room_hall
        state: 'on'
  action:
    service: python_script.enable_room_scene
    data:
      room: hall
- alias: Hall countdown
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.hall
    to: 'countdown'
    for:
      minutes: 5
  action:
    - service: python_script.set_room_state
      data:
        entity_id: room.hall
        state: not_occupied
- alias: Hall not occupied
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.hall
    to: 'not_occupied'
    for:
      seconds: 5
  action:
    service: python_script.enable_room_scene
    data:
      room: hall

- alias: Kitchen occupied
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.kitchen
    to: 'occupied'
    from: 'not_occupied'
  condition:
    condition: and
    conditions:
      - condition: template
        # use the living room sensor since kitchen sensor does not
        # receive enough light
        value_template: >
            {% set mode = states("input_select.myhome_mode") %}
            {% set sensor = states("sensor.motion_sensor_10_2") | float %}
            {% if mode == "Morning" %}
                {{ sensor <= 30 }}
            {% elif mode == "Day" %}
                {{ sensor <= 25 }}
            {% elif mode == "Afternoon" %}
                {{ sensor <= 27 }}
            {% elif mode in ("Evening", "Night") %}
                {{ sensor <= 30 }}
            {% else %}
                {{ sensor <= 25 }}
            {% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: state
        entity_id: input_boolean.room_kitchen
        state: 'on'
  action:
    service: python_script.enable_room_scene
    data:
      room: kitchen
- alias: Kitchen countdown
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.kitchen
    to: 'countdown'
    for:
      minutes: 7
  action:
    - service: python_script.set_room_state
      data:
        entity_id: room.kitchen
        state: not_occupied
- alias: Kitchen not occupied
  hide_entity: True
  trigger:
    platform: state
    entity_id: room.kitchen
    to: 'not_occupied'
    for:
      seconds: 5
  action:
    service: python_script.enable_room_scene
    data:
      room: kitchen
