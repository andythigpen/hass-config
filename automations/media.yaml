# ------------------------------
# Media automations
#
- alias: Connect ADB
  hide_entity: True
  trigger:
    - platform: state
      entity_id: media_player.android_tv
      to: 'unavailable'
    - platform: time_pattern
      minutes: '/1'
      seconds: 0
    - platform: template
      value_template: '{{ states("media_player.android_tv") == "unknown" }}'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: media_player.android_tv
        state: 'unavailable'
      - condition: template
        value_template: '{{ states("media_player.android_tv") == "unknown" }}'
  action:
    service: shell_command.adb

- alias: Android TV media mode
  hide_entity: True
  trigger:
    # listing each state is a workaround so this is not
    # triggered by attribute changes
    - platform: state
      entity_id: media_player.android_tv
      to: 'playing'
    - platform: state
      entity_id: media_player.android_tv
      to: 'paused'
      for: '00:00:05'
    - platform: state
      entity_id: media_player.android_tv
      to: 'idle'
      for: '00:00:05'
    - platform: state
      entity_id: media_player.android_tv
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Off" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
  action:
    service: input_select.select_option
    data_template:
      entity_id: input_select.media_mode
      option: >
          {% set name = state_attr('media_player.android_tv', 'app_name') %}
          {% if is_state('media_player.android_tv', 'playing') %}
          {% if name in ('Amazon Prime Video', 'Netflix') %}
          Movie
          {% else %}
          TV
          {% endif %}
          {% elif is_state('media_player.android_tv', 'paused') %}
          Paused
          {% elif is_state('media_player.android_tv', 'idle') or is_state('media_player.android_tv', 'off') %}
          Idle
          {% endif %}

- alias: Android TV idle on homescreen
  hide_entity: True
  trigger:
    - platform: state
      entity_id: media_player.android_tv
      to: 'idle'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Off" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: template
        value_template: >
            {{ is_state_attr("media_player.android_tv", "app_name", "Homescreen") }}
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.media_mode
      option: 'Idle'

- alias: TV backlight on HDMI
  hide_entity: True
  trigger:
    - platform: state
      entity_id: input_select.media_mode
      to: 'TV'
    - platform: state
      entity_id: input_select.media_mode
      to: 'Movie'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Off" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: template
        value_template: "{{ state_attr('light.hyperion', 'effect') != 'HDMI' }}"
  action:
    - service: python_script.update_occupied_room
    - delay: '00:00:06'
    - service: light.turn_on
      data_template:
        entity_id: light.hyperion
        effect: "Cinema dim lights"
    - delay: '00:00:03'
    - service: light.turn_on
      data_template:
        entity_id: light.hyperion
        effect: HDMI

- alias: TV backlight on solid
  hide_entity: True
  trigger:
    - platform: state
      entity_id: input_select.media_mode
      to: 'Paused'
    - platform: state
      entity_id: input_select.media_mode
      to: 'Idle'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Off" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.hyperion
        effect: "Cinema dim lights"
    - service: python_script.update_occupied_room

- alias: TV backlight idle
  hide_entity: True
  trigger:
    - platform: state
      entity_id: input_select.media_mode
      to: 'Idle'
      for: '00:02:00'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Off" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: state
        entity_id: light.hyperion
        state: 'on'
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.hyperion
        effect: "Cinema brighten lights"
    - service: python_script.update_occupied_room

- alias: TV backlight off
  hide_entity: True
  trigger:
    - platform: state
      entity_id: input_select.media_mode
      to: 'Idle'
      for: '00:05:00'
    - platform: state
      entity_id: media_player.samsung_tv
      to: 'off'
    - platform: state
      entity_id: media_player.android_tv
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Off" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: state
        entity_id: light.hyperion
        state: 'on'
  action:
    - service: light.turn_off
      data:
        entity_id: light.hyperion
    - service: python_script.update_occupied_room

- alias: All lights off for movies
  hide_entity: True
  trigger:
    - platform: state
      entity_id: input_select.media_mode
      to: 'Movie'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: state
        entity_id: room.living_room
        state: 'occupied'
  action:
    service: light.turn_off
    data:
      entity_id:
        - group.bedroom
        - group.kitchen
        - group.hall
      transition: 3
