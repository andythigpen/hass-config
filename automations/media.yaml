# ------------------------------
# Media automations
#
- alias: Android TV media mode
  trigger:
    # listing each state is a workaround so this is not
    # triggered by attribute changes
    - platform: state
      entity_id: media_player.android_tv
      to: 'playing'
    - platform: state
      entity_id: media_player.android_tv
      to: 'paused'
      for: '00:00:05'
    - platform: state
      entity_id: media_player.android_tv
      to: 'standby'
    - platform: state
      entity_id: media_player.android_tv
      to: 'idle'
    - platform: state
      entity_id: media_player.android_tv
      to: 'off'
    # trigger immediately when returning to the homescreen
    - platform: template
      value_template: "{{ state_attr('media_player.android_tv', 'app_name') == 'com.google.android.tvlauncher' }}"
    - platform: template
      value_template: "{{ state_attr('media_player.android_tv', 'app_name') != 'com.google.android.tvlauncher' }}"
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Disabled" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
  action:
    - service: system_log.write
      data_template:
        level: info
        message: >
          Current app {{ state_attr('media_player.android_tv', 'app_name') }}
          {{ state_attr('media_player.android_tv', 'app_id') }}
    - service: input_select.select_option
      data_template:
        entity_id: input_select.media_mode
        option: >
          {% set name = state_attr('media_player.android_tv', 'app_name') %}
          {% if is_state('media_player.android_tv', 'playing') %}
          {% if name in ('Amazon Prime Video', 'Netflix') %}
          Movie
          {% elif 'amazonvideo' in name or 'hbonow' in name %}
          Movie
          {% else %}
          TV
          {% endif %}
          {% elif is_state('media_player.android_tv', 'paused') %}
          {% if name in ('com.google.android.tvlauncher', 'com.android.tv.settings') %}
          Awake
          {% else %}
          Paused
          {% endif %}
          {% elif is_state('media_player.android_tv', 'standby') %}
          Awake
          {% elif is_state('media_player.android_tv', 'idle') %}
          Idle
          {% elif is_state('media_player.android_tv', 'off') %}
          Off
          {% endif %}

- alias: TV backlight on HDMI
  trigger:
    - platform: state
      entity_id: input_select.media_mode
      to: 'TV'
    - platform: state
      entity_id: input_select.media_mode
      to: 'Movie'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Disabled" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: template
        value_template: "{{ state_attr('light.hyperion', 'effect') != 'V4L' }}"
  action:
    - delay: '00:00:06'
    - service: light.turn_on
      data_template:
        entity_id: light.hyperion
        effect: >
            {%- set prev = trigger.from_state.state|lower -%}
            {%- if prev == 'paused' -%}{%- set prev = 'idle' -%}{%- endif -%}
            {{ prev }}-off
    - delay: '00:00:03'
    - service: light.turn_on
      data_template:
        entity_id: light.hyperion
        effect: V4L

- alias: TV backlight on
  trigger:
    - platform: state
      entity_id: input_select.media_mode
      to: 'Paused'
    - platform: state
      entity_id: input_select.media_mode
      to: 'Awake'
    - platform: state
      entity_id: input_select.media_mode
      to: 'Idle'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Disabled" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.hyperion
        effect: >
            {%- set prev = trigger.from_state.state|lower -%}
            {%- if prev in ('paused', 'movie', 'tv') -%}{%- set prev = 'idle' -%}{%- endif -%}
            {%- set curr = trigger.to_state.state|lower -%}
            {%- if curr == 'paused' -%}
            {%- set prev = 'off' -%}
            {%- set curr = 'idle' -%}
            {%- endif -%}
            {{ prev }}-{{ curr }}

- alias: TV backlight off
  trigger:
    - platform: state
      entity_id: input_select.media_mode
      to: 'Off'
    - platform: state
      entity_id: media_player.samsung_tv
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
            {% set mode = states("input_select.media_mode") %}
            {% if mode != "Disabled" %}true{% endif %}
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: state
        entity_id: light.hyperion
        state: 'on'
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.hyperion
        effect: "{{ trigger.from_state.state|lower }}-{{ trigger.to_state.state|lower }}"
    - delay: '00:00:04'
    - service: light.turn_off
      data:
        entity_id: light.hyperion

- alias: All lights off for movies
  trigger:
    - platform: state
      entity_id: input_select.media_mode
      to: 'Movie'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.myhome_active
        state: 'on'
      - condition: state
        entity_id: room.living_room
        state: 'occupied'
  action:
    service: light.turn_off
    data:
      entity_id:
        - group.bedroom
        - group.kitchen
        - group.office
      transition: 3
