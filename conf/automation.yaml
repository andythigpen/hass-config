# ------------------------------
# Home presence rules
# Turns lights on/off based on presence
#
- alias: Turn on light when sun sets or arriving home
  trigger:
    - platform: sun
      event: sunset
      offset: "-01:00:00"
    - platform: state
      entity_id: group.all_devices
      state: home
  condition:
    condition: state
    entity_id: group.all_devices
    state: home
  action:
    service: light.turn_on
    entity_id: group.living_room
- alias: Turn lights off when not home
  trigger:
    platform: state
    entity_id: group.all_devices
    from: 'home'
    to: 'not_home'
  action:
    service: light.turn_off
    entity_id: group.all_lights

# ------------------------------
# Home mode rules
# Updates the state of the home based on time of day
#
- alias: Morning home mode
  trigger:
    platform: time
    after: '06:00:00'
  action:
    service: myhome.set_mode
    data:
      mode: morning
- alias: Day home mode
  trigger:
    platform: time
    after: '09:00:00'
  action:
    service: myhome.set_mode
    data:
      mode: day
- alias: Afternoon home mode
  trigger:
    platform: time
    after: '13:00:00'
  action:
    service: myhome.set_mode
    data:
      mode: afternoon
- alias: Evening home mode
  trigger:
    platform: sun
    event: sunset
    offset: '-02:00:00'
  action:
    service: myhome.set_mode
    data:
      mode: evening
- alias: Night home mode
  trigger:
    platform: sun
    event: sunset
    offset: '01:00:00'
  action:
    service: myhome.set_mode
    data:
      mode: night

# ------------------------------
# Motion detector rules
# Updates the state of a room if motion is detected
#
- alias: Bedroom motion detected
  trigger:
    platform: state
    to: 'on'
    entity_id: binary_sensor.motion_sensor_2_1
  condition: &motion_condition
    condition: and
    conditions:
      - condition: state
        entity_id: group.all_devices
        state: home
      - condition: state
        entity_id: myhome.active
        state: 'on'
  action:
    service: myhome.set_room_occupied
    data:
      entity_id: room.bedroom
- alias: Hall motion detected
  trigger:
    platform: state
    to: 'on'
    entity_id: binary_sensor.motion_sensor_5_1
  condition:
    <<: *motion_condition
  action:
    service: myhome.set_room_occupied
    data:
      entity_id: room.hall
- alias: Living Room motion detected
  trigger:
    platform: state
    to: 'on'
    entity_id: binary_sensor.motion_sensor_10_1
  condition:
    <<: *motion_condition
  action:
    service: myhome.set_room_occupied
    data:
      entity_id: room.living_room
- alias: Bookcase motion detected
  trigger:
    platform: state
    to: 'on'
    entity_id: binary_sensor.motion_sensor_4_1
  condition:
    <<: *motion_condition
  action:
    service: myhome.set_room_occupied
    data:
      entity_id: room.living_room
- alias: Kitchen motion detected
  trigger:
    platform: state
    to: 'on'
    entity_id: binary_sensor.motion_sensor_1_1
  condition:
    <<: *motion_condition
  action:
    service: myhome.set_room_occupied
    data:
      entity_id: room.kitchen


# ------------------------------
# Room occupancy rules
#
- alias: Set rooms to unoccupied when away
  trigger:
    platform: state
    entity_id: group.all_devices
    from: 'home'
    to: 'not_home'
  action:
    service: myhome.set_away
- alias: Bedroom occupied
  trigger:
    platform: template
    value_template: '{{ is_state_attr("room.bedroom", "mode", "occupied") }}'
  condition:
    platform: template
    value_template: '{{ states("sensor.motion_sensor_2_2") | float <= 12 }}'
  action:
    service: myhome.enable_occupied_scene
    data:
      entity_id: room.bedroom
- alias: Living room occupied
  trigger:
    platform: template
    value_template: '{{ is_state_attr("room.living_room", "mode", "occupied") }}'
  condition:
    platform: template
    value_template: '{{ states("sensor.motion_sensor_10_2") | float <= 16 or states("sensor.motion_sensor_4_2") | float <= 12 }}'
  action:
    service: myhome.enable_occupied_scene
    data:
      entity_id: room.living_room
- alias: Hall occupied
  trigger:
    platform: template
    value_template: '{{ is_state_attr("room.hall", "mode", "occupied") }}'
  condition:
    platform: template
    value_template: '{{ states("sensor.motion_sensor_5_2") | float <= 12 }}'
  action:
    service: myhome.enable_occupied_scene
    data:
      entity_id: room.hall
- alias: Kitchen occupied
  trigger:
    platform: template
    value_template: '{{ is_state_attr("room.kitchen", "mode", "occupied") }}'
  condition:
    platform: template
    value_template: '{{ states("sensor.motion_sensor_1_2") | float <= 15 }}'
  action:
    service: myhome.enable_occupied_scene
    data:
      entity_id: room.kitchen
